{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red27\green31\blue34;\red244\green246\blue249;\red203\green35\blue57;
\red87\green96\blue106;\red91\green40\blue180;\red7\green68\blue184;\red6\green33\blue79;}
{\*\expandedcolortbl;;\cssrgb\c14118\c16078\c18039;\cssrgb\c96471\c97255\c98039;\cssrgb\c84314\c22745\c28627;
\cssrgb\c41569\c45098\c49020;\cssrgb\c43529\c25882\c75686;\cssrgb\c0\c36078\c77255;\cssrgb\c1176\c18431\c38431;}
\margl1440\margr1440\vieww28600\viewh16600\viewkind0
\deftab720
\pard\pardeftab720\sl380\partightenfactor0

\f0\fs27\fsmilli13600 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (\cf4 \strokec4 function\cf2 \strokec2 (ext) \{\
    \cf5 \strokec5 // Cleanup function when the extension is unloaded\cf2 \strokec2 \
    ext.\cf6 \strokec6 _shutdown\cf2 \strokec2  \cf4 \strokec4 =\cf2 \strokec2  \cf4 \strokec4 function\cf2 \strokec2 () \{\};\
\
    \cf5 \strokec5 // Status reporting code\cf2 \strokec2 \
    \cf5 \strokec5 // Use this to report missing hardware, plugin or unsupported browser\cf2 \strokec2 \
    ext.\cf6 \strokec6 _getStatus\cf2 \strokec2  \cf4 \strokec4 =\cf2 \strokec2  \cf4 \strokec4 function\cf2 \strokec2 () \{\
        \cf4 \strokec4 return\cf2 \strokec2  \{status\cf4 \strokec4 :\cf2 \strokec2  \cf7 \strokec7 2\cf2 \strokec2 , msg\cf4 \strokec4 :\cf2 \strokec2  \cf8 \strokec8 'Ready'\cf2 \strokec2 \};\
    \};\
\
    ext.\cf6 \strokec6 my_first_block\cf2 \strokec2  \cf4 \strokec4 =\cf2 \strokec2  \cf4 \strokec4 function\cf2 \strokec2 () \{\
        \cf5 \strokec5 // Code that gets executed when the block is run\cf2 \strokec2 \
    \};\
\
    \cf5 \strokec5 // Block and block menu descriptions\cf2 \strokec2 \
    \cf4 \strokec4 var\cf2 \strokec2  descriptor \cf4 \strokec4 =\cf2 \strokec2  \{\
        blocks\cf4 \strokec4 :\cf2 \strokec2  [\
            \cf5 \strokec5 // Block type, block name, function name\cf2 \strokec2 \
            [\cf8 \strokec8 ' '\cf2 \strokec2 , \cf8 \strokec8 'my first block'\cf2 \strokec2 , \cf8 \strokec8 'my_first_block'\cf2 \strokec2 ],\
        ]\
    \};\
\
    \cf5 \strokec5 // Register the extension\cf2 \strokec2 \
    ScratchExtensions.\cf6 \strokec6 register\cf2 \strokec2 (\cf8 \strokec8 'My first extension'\cf2 \strokec2 , descriptor, ext);\
\})(\{\});\
}